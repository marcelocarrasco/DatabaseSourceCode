--------------------------------------------------------
--  DDL for Procedure P_LTE_NSN_SRV_LCEL_IBHM_INS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HARRIAGUE"."P_LTE_NSN_SRV_LCEL_IBHM_INS" (P_FECHA_DESDE IN CHAR)
IS
-- Autor: Mariano Moron. Fecha: 22.09.2015.
DML_ERRORS EXCEPTION;
PRAGMA EXCEPTION_INIT(DML_ERRORS, -24381);
    -- LOG --111
L_ERRORS NUMBER;
L_ERRNO    NUMBER;
L_MSG    VARCHAR2(4000);
L_IDX    NUMBER;
  -- END LOG --

LIMIT_IN PLS_INTEGER := 100;
V_FECHA_DESDE VARCHAR2(10);
V_FECHA_HASTA VARCHAR2(10);

TYPE T_ARRAY_TAB IS TABLE OF LTE_NSN_SERVICE_LCEL_IBHM%ROWTYPE;
T_ARRAY_COL T_ARRAY_TAB;


CURSOR CUR (FECHA_DESDE VARCHAR2, FECHA_HASTA VARCHAR2) IS
  SELECT
    TRUNC( T1.FECHA, 'MONTH') AS FECHA,
    T1.MRBTS_ID,
    T1.LNBTS_ID,
    T1.LNCEL_ID,
    NVL(ROUND(AVG(T1.AVG_PDCP_CELL_THP_DL_NUM),2)                   ,0 )  AS  AVG_PDCP_CELL_THP_DL_NUM,
    NVL(ROUND(AVG(T1.AVG_PDCP_CELL_THP_DL_DEN),2)                   ,0 )  AS AVG_PDCP_CELL_THP_DL_DEN,
    NVL(ROUND(AVG(T1.SIGN_EST_F_RRCCOMPL_MISSING),2)                ,0 )  AS SIGN_EST_F_RRCCOMPL_MISSING,
    NVL(ROUND(AVG(T1.SIGN_EST_F_RRCCOMPL_ERROR),2)                  ,0 )  AS  SIGN_EST_F_RRCCOMPL_ERROR,
    NVL(ROUND(AVG(T1.SIGN_CONN_ESTAB_FAIL_RRMRAC),2)                ,0 )  AS  SIGN_CONN_ESTAB_FAIL_RRMRAC,
    NVL(ROUND(AVG(T1.SIGN_CONN_ESTAB_FAIL_RB_EMG),2)                ,0 )  AS  SIGN_CONN_ESTAB_FAIL_RB_EMG,
    NVL(ROUND(AVG(T1.EPS_BEARER_SETUP_FAIL_RNL),2)                  ,0 )  AS  EPS_BEARER_SETUP_FAIL_RNL,
    NVL(ROUND(AVG(T1.EPS_BEARER_SETUP_FAIL_RESOUR),2)               ,0 )  AS  EPS_BEARER_SETUP_FAIL_RESOUR,
    NVL(ROUND(AVG(T1.EPS_BEARER_SETUP_FAIL_TRPORT),2)               ,0 )  AS  EPS_BEARER_SETUP_FAIL_TRPORT,
    NVL(ROUND(AVG(T1.EPS_BEARER_SETUP_FAIL_OTH),2)                  ,0 )  AS  EPS_BEARER_SETUP_FAIL_OTH,
    NVL(ROUND(AVG(T1.ENB_EPS_BEARER_REL_REQ_RNL),2)                 ,0 )  AS  ENB_EPS_BEARER_REL_REQ_RNL,
    NVL(ROUND(AVG(T1.ENB_EPS_BEARER_REL_REQ_TNL),2)                 ,0 )  AS  ENB_EPS_BEARER_REL_REQ_TNL,
    NVL(ROUND(AVG(T1.ENB_EPS_BEARER_REL_REQ_OTH),2)                 ,0 )  AS  ENB_EPS_BEARER_REL_REQ_OTH,
    NVL(ROUND(AVG(T1.AVG_PDCP_CELL_THP_UL_NUM),2)                   ,0 )  AS  AVG_PDCP_CELL_THP_UL_NUM,
    NVL(ROUND(AVG(T1.AVG_PDCP_CELL_THP_UL_DEN),2)                   ,0 )  AS AVG_PDCP_CELL_THP_UL_DEN,
    NVL(ROUND(AVG(T1.TRAFICO_UL),2)                                 ,0 )  AS TRAFICO_UL,
    NVL(ROUND(AVG(T1.TRAFICO_DL),2)                                 ,0 )  AS TRAFICO_DL,
    NVL(MAX(T1.USER_ACT_BUFFER_UL_MAX)                              ,0 )  AS USER_ACT_BUFFER_UL_MAX,
    NVL(MAX(T1.USER_ACT_BUFFER_DL_MAX)                              ,0 )  AS USER_ACT_BUFFER_DL_MAX,
    NVL(ROUND(AVG(T1.USER_ACT_BUFFER_UL_AVG),2)                     ,0 )  AS  USER_ACT_BUFFER_UL_AVG,
    NVL(ROUND(AVG(T1.USER_ACT_BUFFER_DL_AVG),2)                     ,0 )  AS  USER_ACT_BUFFER_DL_AVG,
    NVL(ROUND(AVG(T1.RACH_STP_SUCCESS_NUM),2)                       ,0 )  AS  RACH_STP_SUCCESS_NUM,
    NVL(ROUND(AVG(T1.RACH_STP_SUCCESS_DEN),2)                       ,0 )  AS RACH_STP_SUCCESS_DEN,
    NVL(ROUND(AVG(T1.LATENCY_UL),2)                                 ,0 )  AS LATENCY_UL,
    NVL(ROUND(AVG(T1.LATENCY_DL),2)                                 ,0 )  AS LATENCY_DL,
    NVL(ROUND(AVG(T1.CELL_THROUGHPUT_DL),2)                         ,0 )  AS CELL_THROUGHPUT_DL,
    NVL(ROUND(AVG(T1.CELL_THROUGHPUT_UL),2)                         ,0 )  AS CELL_THROUGHPUT_UL,
    NVL(ROUND(AVG(T1.BLER_PUSCH_NUM),2)                             ,0 )  AS  BLER_PUSCH_NUM,
    NVL(ROUND(AVG(T1.BLER_PUSCH_DEN),2)                             ,0 )  AS BLER_PUSCH_DEN,
    NVL(ROUND(AVG(T1.BLER_PDSCH_NUM),2)                             ,0 )  AS  BLER_PDSCH_NUM,
    NVL(ROUND(AVG(T1.BLER_PDSCH_DEN),2)                             ,0 )  AS BLER_PDSCH_DEN,
    NVL(ROUND(AVG(T1.RRC_CONN_STP_SUCCESS_NUM),2)                   ,0 )  AS  RRC_CONN_STP_SUCCESS_NUM,
    NVL(ROUND(AVG(T1.RRC_CONN_STP_SUCCESS_DEN),2)                   ,0 )  AS RRC_CONN_STP_SUCCESS_DEN,
    NVL(ROUND(AVG(T1.RAB_DROP_ATTEMPTS),2)                          ,0 )  AS RAB_DROP_ATTEMPTS,
    NVL(ROUND(AVG(T1.RAB_STP_SUCCESS_NUM),2)                        ,0 )  AS  RAB_STP_SUCCESS_NUM,
    NVL(ROUND(AVG(T1.RAB_STP_SUCCESS_DEN),2)                        ,0 )  AS RAB_STP_SUCCESS_DEN,
    NVL(ROUND(AVG(T1.RAB_SETUP_SUCCESS_NUM),2)                      ,0 )  AS RAB_SETUP_SUCCESS_NUM,
    NVL(ROUND(AVG(T1.RAB_SETUP_SUCCESS_DEN),2)                      ,0 )  AS RAB_SETUP_SUCCESS_DEN,
    NVL(ROUND(AVG(T1.RRC_CONN_STP_ATTEMPTS),2)                      ,0 )  AS RRC_CONN_STP_ATTEMPTS,
    NVL(ROUND(AVG(T1.EPS_BEARER_SETUP_ATTEMPTS),2)                  ,0 )  AS EPS_BEARER_SETUP_ATTEMPTS,
    NVL(ROUND(AVG(T1.RAB_DROP_USR_NUM),2)                           ,0 )  AS RAB_DROP_USR_NUM ,
    NVL(ROUND(AVG(T1.RAB_DROP_USR_DEN),2)                           ,0 )  AS RAB_DROP_USR_DEN ,
    NVL(ROUND(AVG(T1.RAB_NORMAL_RELEASE_NUM),2)                     ,0 )  AS RAB_NORMAL_RELEASE_NUM,
    NVL(ROUND(AVG(T1.RAB_NORMAL_RELEASE_DEN),2)                     ,0 )  AS RAB_NORMAL_RELEASE_DEN,
    NVL(ROUND(AVG(T1.EPC_EPS_BEARER_REL_REQ_RNL),2)                 ,0 )  AS EPC_EPS_BEARER_REL_REQ_RNL,
    NVL(ROUND(AVG(T1.EPC_EPS_BEARER_REL_REQ_OTH),2)                 ,0 )  AS EPC_EPS_BEARER_REL_REQ_OTH,
    NVL(ROUND(AVG(T1.AVG_ACTIVE_USER_CELL),2)                       ,0 )  AS AVG_ACTIVE_USER_CELL,
    NVL(ROUND(AVG(T1.MAX_AVG_ACTIVE_USER_CELL),2)                   ,0 )  AS MAX_AVG_ACTIVE_USER_CELL,
    NVL(ROUND(AVG(T1.RRC_CONNECTED_UES),2)                          ,0 )  AS RRC_CONNECTED_UES
  FROM LTE_NSN_SERVICE_LCEL_BH T1
  INNER JOIN LTE_TRAFIC_LCEL_IBHM_AUX T2
  ON T1.MRBTS_ID = T2.MRBTS_ID
  AND T1.LNBTS_ID = T2.LNBTS_ID
  AND T1.LNCEL_ID = T2.LNCEL_ID
  AND T1.FECHA = T2.FECHA

  WHERE T1.FECHA BETWEEN  TO_DATE(FECHA_DESDE, 'DD.MM.YYYY')
                       AND TO_DATE(FECHA_HASTA, 'DD.MM.YYYY') + 86399/86400

  GROUP BY TRUNC( T1.FECHA, 'MONTH') , T1.MRBTS_ID, T1.LNBTS_ID, T1.LNCEL_ID;

BEGIN

 SELECT TO_CHAR(TRUNC(TO_DATE(P_FECHA_DESDE, 'DD.MM.YYYY'), 'MONTH'), 'DD.MM.YYYY')                    FECHA_DESDE,
       TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(P_FECHA_DESDE, 'DD.MM.YYYY'), 'MONTH'), 1) - 1, 'DD.MM.YYYY') FECHA_HASTA
  INTO V_FECHA_DESDE,
       V_FECHA_HASTA
  FROM DUAL;


OPEN CUR (V_FECHA_DESDE, V_FECHA_HASTA);

LOOP
  FETCH CUR BULK COLLECT INTO T_ARRAY_COL LIMIT LIMIT_IN;
  BEGIN
    FORALL I IN 1 .. T_ARRAY_COL.COUNT SAVE EXCEPTIONS
      INSERT INTO LTE_NSN_SERVICE_LCEL_IBHM VALUES T_ARRAY_COL (I);
  EXCEPTION
    WHEN DML_ERRORS THEN
      -- CAPTURE EXCEPTIONS TO PERFORM OPERATIONS DML
           L_ERRORS := SQL%BULK_EXCEPTIONS.COUNT;
              FOR I IN 1 .. L_ERRORS
              LOOP
                  L_ERRNO := SQL%BULK_EXCEPTIONS(I).ERROR_CODE;
                  L_MSG   := SQLERRM(-L_ERRNO);
                  L_IDX   := SQL%BULK_EXCEPTIONS(I).ERROR_INDEX;
                  /*
                  INSERT INTO ERROR_LOG(ID, IMPORT_DATE, SOURCE, TARGET, LNBTS_ID, LNCEL_ID, PERIOD_START_TIME,
                   MCC_ID, MNC_ID, ERROR_NRO, ERROR_MESG)
                  VALUES
                  (SEQ_ERROR_LOG.NEXTVAL,SYSDATE,P_SOURCE1_TABLE,P_TARGET_TABLE,T_ARRAY_COL(L_IDX).LNBTS_ID,
                   T_ARRAY_COL(L_IDX).LNCEL_ID,T_ARRAY_COL(L_IDX).PERIOD_START_TIME,T_ARRAY_COL(L_IDX).MCC_ID,
                   T_ARRAY_COL(L_IDX).MNC_ID, L_ERRNO,L_MSG );
        */
              END LOOP;
  -- END --
  END;
  EXIT WHEN CUR%NOTFOUND;
END LOOP;
COMMIT;
CLOSE CUR;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
