--------------------------------------------------------
--  DDL for Procedure P_LTE_NSN_SRV_LCE_HOUR_INS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HARRIAGUE"."P_LTE_NSN_SRV_LCE_HOUR_INS" (P_FECHA_DESDE IN CHAR, P_FECHA_HASTA IN CHAR)
IS
-- Autor: Mariano Moron. Fecha: 31.08.2015.
-- Actualizacion: Mariano Morón. Fecha: 07.09.2015. Motivo: Se agregan nuevos KPI's.
-- Actualizacion: Mariano Morón. Fecha: 08.09.2015. Motivo: Se agregan parametros de entrada.
-- Actualizacion: Mariano Morón. Fecha: 09.09.2015. Motivo: Estandarización de nombres.
-- Actualizacion: Mariano Morón. Fecha: 17.09.2015. Motivo: Se eliminan 2 Kpi's a nivel de LNBTS
DML_ERRORS EXCEPTION;
PRAGMA EXCEPTION_INIT(DML_ERRORS, -24381);
    -- LOG --
L_ERRORS NUMBER;
L_ERRNO    NUMBER;
L_MSG    VARCHAR2(4000);
L_IDX    NUMBER;
  -- END LOG --

LIMIT_IN PLS_INTEGER := 100;

TYPE T_ARRAY_TAB IS TABLE OF LTE_NSN_SERVICE_LCEL_HOUR%ROWTYPE;
T_ARRAY_COL T_ARRAY_TAB;

CURSOR CUR (FECHA_DESDE VARCHAR2, FECHA_HASTA VARCHAR2) IS
SELECT
      TRUNC(T4.PERIOD_START_TIME, 'HH24') AS FECHA,
      T4.MRBTS_ID,
      T4.LNBTS_ID,
      T4.LNCEL_ID,

      NVL(SUM(T4.PDCP_SDU_VOL_DL)                   ,0 )  AS  AVG_PDCP_CELL_THP_DL_NUM,
      NVL(SUM(T4.ACTIVE_TTI_DL)                     ,0 )  AS AVG_PDCP_CELL_THP_DL_DEN,
      NVL(SUM(T2.SIGN_EST_F_RRCCOMPL_MISSING)             ,0 )  AS SIGN_EST_F_RRCCOMPL_MISSING,
      NVL(SUM(T2.SIGN_EST_F_RRCCOMPL_ERROR)              ,0 )  AS  SIGN_EST_F_RRCCOMPL_ERROR,
      NVL(SUM(T2.SIGN_CONN_ESTAB_FAIL_RRMRAC)             ,0 )  AS  SIGN_CONN_ESTAB_FAIL_RRMRAC,
      NVL(SUM(T2.SIGN_CONN_ESTAB_FAIL_RB_EMG)             ,0 )  AS  SIGN_CONN_ESTAB_FAIL_RB_EMG,
      NVL(SUM(T1.EPS_BEARER_SETUP_FAIL_RNL)              ,0 )  AS  EPS_BEARER_SETUP_FAIL_RNL,
      NVL(SUM(T1.EPS_BEARER_SETUP_FAIL_RESOUR)             ,0 )  AS  EPS_BEARER_SETUP_FAIL_RESOUR,
      NVL(SUM(T1.EPS_BEARER_SETUP_FAIL_TRPORT)             ,0 )  AS  EPS_BEARER_SETUP_FAIL_TRPORT,
      NVL(SUM(T1.EPS_BEARER_SETUP_FAIL_OTH)               ,0 )  AS  EPS_BEARER_SETUP_FAIL_OTH,
      NVL(SUM(T1.ENB_EPS_BEARER_REL_REQ_RNL)               ,0 )  AS  ENB_EPS_BEARER_REL_REQ_RNL,
      NVL(SUM(T1.ENB_EPS_BEARER_REL_REQ_TNL)               ,0 )  AS  ENB_EPS_BEARER_REL_REQ_TNL,
      NVL(SUM(T1.ENB_EPS_BEARER_REL_REQ_OTH)               ,0 )  AS  ENB_EPS_BEARER_REL_REQ_OTH,
      NVL(SUM(T4.PDCP_SDU_VOL_UL)                   ,0 )  AS  AVG_PDCP_CELL_THP_UL_NUM,
      NVL(SUM(T4.ACTIVE_TTI_UL)                     ,0 )  AS AVG_PDCP_CELL_THP_UL_DEN,
      NVL(ROUND(SUM(T4.PDCP_SDU_VOL_UL)/1000000,2)           ,0 )  AS TRAFICO_UL,
      NVL(ROUND(SUM(T4.PDCP_SDU_VOL_DL)/1000000,2)           ,0 )  AS TRAFICO_DL,
      NVL(MAX(T3.UL_UE_DATA_BUFF_MAX)                 ,0 )  AS USER_ACT_BUFFER_UL_MAX,
      NVL(MAX(T3.DL_UE_DATA_BUFF_MAX)                 ,0 )  AS USER_ACT_BUFFER_DL_MAX,

       NVL(ROUND(DECODE(AVG(T3.DENOM_ACTIVE_UE_DATA_UL),0,0,
          SUM(T3.SUM_ACTIVE_UE_DATA_UL)
          /AVG(T3.DENOM_ACTIVE_UE_DATA_UL)),2)          ,0) AS USER_ACT_BUFFER_UL_AVG,

      NVL(ROUND(DECODE(AVG(T3.DENOM_ACTIVE_UE_DATA_DL),0,0,
          SUM(T3.SUM_ACTIVE_UE_DATA_DL)
          /AVG(T3.DENOM_ACTIVE_UE_DATA_DL)),2)            ,0) AS USER_ACT_BUFFER_DL_AVG,

      NVL(SUM(T3.RACH_STP_COMPLETIONS)                 ,0 )  AS  RACH_STP_SUCCESS_NUM,
      NVL(SUM(
        T3.RACH_STP_ATT_SMALL_MSG+
        T3.RACH_STP_ATT_LARGE_MSG+
        T3.RACH_STP_ATT_DEDICATED
      )                                 ,0 )  AS RACH_STP_SUCCESS_DEN,
      NVL(ROUND(AVG(T3.PDCP_SDU_DELAY_UL_DTCH_MEAN),2)         ,0 )  AS LATENCY_UL,
      NVL(ROUND(AVG(T3.PDCP_SDU_DELAY_DL_DTCH_MEAN),2)         ,0 )  AS LATENCY_DL,
      NVL(MAX(T4.PDCP_DATA_RATE_MAX_DL)                 ,0 )  AS CELL_THROUGHPUT_DL,
      NVL(MAX(T4.PDCP_DATA_RATE_MAX_UL)                 ,0 )  AS CELL_THROUGHPUT_UL,
      NVL(SUM(
        T3.PUSCH_TRANS_NACK_MCS0+
        T3.PUSCH_TRANS_NACK_MCS1+
        T3.PUSCH_TRANS_NACK_MCS2+
        T3.PUSCH_TRANS_NACK_MCS3+
        T3.PUSCH_TRANS_NACK_MCS4+
        T3.PUSCH_TRANS_NACK_MCS5+
        T3.PUSCH_TRANS_NACK_MCS6+
        T3.PUSCH_TRANS_NACK_MCS7+
        T3.PUSCH_TRANS_NACK_MCS8+
        T3.PUSCH_TRANS_NACK_MCS9+
        T3.PUSCH_TRANS_NACK_MCS10+
        T3.PUSCH_TRANS_NACK_MCS11+
        T3.PUSCH_TRANS_NACK_MCS12+
        T3.PUSCH_TRANS_NACK_MCS13+
        T3.PUSCH_TRANS_NACK_MCS14+
        T3.PUSCH_TRANS_NACK_MCS15+
        T3.PUSCH_TRANS_NACK_MCS16+
        T3.PUSCH_TRANS_NACK_MCS17+
        T3.PUSCH_TRANS_NACK_MCS18+
        T3.PUSCH_TRANS_NACK_MCS19+
        T3.PUSCH_TRANS_NACK_MCS20+
        T3.PUSCH_TRANS_NACK_MCS21+
        T3.PUSCH_TRANS_NACK_MCS22+
        T3.PUSCH_TRANS_NACK_MCS23+
        T3.PUSCH_TRANS_NACK_MCS24+
        T3.PUSCH_TRANS_NACK_MCS25+
        T3.PUSCH_TRANS_NACK_MCS26+
        T3.PUSCH_TRANS_NACK_MCS27+
        T3.PUSCH_TRANS_NACK_MCS28
      )                                       ,0 )  AS  BLER_PUSCH_NUM,
      NVL(SUM(
        T3.PUSCH_TRANS_USING_MCS0+
          T3.PUSCH_TRANS_USING_MCS1+
          T3.PUSCH_TRANS_USING_MCS2+
          T3.PUSCH_TRANS_USING_MCS3+
          T3.PUSCH_TRANS_USING_MCS4+
          T3.PUSCH_TRANS_USING_MCS5+
          T3.PUSCH_TRANS_USING_MCS6+
          T3.PUSCH_TRANS_USING_MCS7+
          T3.PUSCH_TRANS_USING_MCS8+
          T3.PUSCH_TRANS_USING_MCS9+
          T3.PUSCH_TRANS_USING_MCS10+
          T3.PUSCH_TRANS_USING_MCS11+
          T3.PUSCH_TRANS_USING_MCS12+
          T3.PUSCH_TRANS_USING_MCS13+
          T3.PUSCH_TRANS_USING_MCS14+
          T3.PUSCH_TRANS_USING_MCS15+
          T3.PUSCH_TRANS_USING_MCS16+
          T3.PUSCH_TRANS_USING_MCS17+
          T3.PUSCH_TRANS_USING_MCS18+
          T3.PUSCH_TRANS_USING_MCS19+
          T3.PUSCH_TRANS_USING_MCS20+
          T3.PUSCH_TRANS_USING_MCS21+
          T3.PUSCH_TRANS_USING_MCS22+
          T3.PUSCH_TRANS_USING_MCS23+
          T3.PUSCH_TRANS_USING_MCS24+
          T3.PUSCH_TRANS_USING_MCS25+
          T3.PUSCH_TRANS_USING_MCS26+
          T3.PUSCH_TRANS_USING_MCS27+
          T3.PUSCH_TRANS_USING_MCS28
      )                                       ,0 )  AS BLER_PUSCH_DEN,

      NVL(SUM(
        T3.PDSCH_TRANS_NACK_MCS0+
        T3.PDSCH_TRANS_NACK_MCS1+
        T3.PDSCH_TRANS_NACK_MCS2+
        T3.PDSCH_TRANS_NACK_MCS3+
        T3.PDSCH_TRANS_NACK_MCS4+
        T3.PDSCH_TRANS_NACK_MCS5+
        T3.PDSCH_TRANS_NACK_MCS6+
        T3.PDSCH_TRANS_NACK_MCS7+
        T3.PDSCH_TRANS_NACK_MCS8+
        T3.PDSCH_TRANS_NACK_MCS9+
        T3.PDSCH_TRANS_NACK_MCS10+
        T3.PDSCH_TRANS_NACK_MCS11+
        T3.PDSCH_TRANS_NACK_MCS12+
        T3.PDSCH_TRANS_NACK_MCS13+
        T3.PDSCH_TRANS_NACK_MCS14+
        T3.PDSCH_TRANS_NACK_MCS15+
        T3.PDSCH_TRANS_NACK_MCS16+
        T3.PDSCH_TRANS_NACK_MCS17+
        T3.PDSCH_TRANS_NACK_MCS18+
        T3.PDSCH_TRANS_NACK_MCS19+
        T3.PDSCH_TRANS_NACK_MCS20+
        T3.PDSCH_TRANS_NACK_MCS21+
        T3.PDSCH_TRANS_NACK_MCS22+
        T3.PDSCH_TRANS_NACK_MCS23+
        T3.PDSCH_TRANS_NACK_MCS24+
        T3.PDSCH_TRANS_NACK_MCS25+
        T3.PDSCH_TRANS_NACK_MCS26+
        T3.PDSCH_TRANS_NACK_MCS27+
        T3.PDSCH_TRANS_NACK_MCS28+
        T3.PDSCH_TRANS_NACK_MCS29+
        T3.PDSCH_TRANS_NACK_MCS30+
        T3.PDSCH_TRANS_NACK_MCS31
      )                                         ,0 )  AS  BLER_PDSCH_NUM,
      NVL(SUM(
        T3.PDSCH_TRANS_USING_MCS0+
        T3.PDSCH_TRANS_USING_MCS1+
        T3.PDSCH_TRANS_USING_MCS2+
        T3.PDSCH_TRANS_USING_MCS3+
        T3.PDSCH_TRANS_USING_MCS4+
        T3.PDSCH_TRANS_USING_MCS5+
        T3.PDSCH_TRANS_USING_MCS6+
        T3.PDSCH_TRANS_USING_MCS7+
        T3.PDSCH_TRANS_USING_MCS8+
        T3.PDSCH_TRANS_USING_MCS9+
        T3.PDSCH_TRANS_USING_MCS10+
        T3.PDSCH_TRANS_USING_MCS11+
        T3.PDSCH_TRANS_USING_MCS12+
        T3.PDSCH_TRANS_USING_MCS13+
        T3.PDSCH_TRANS_USING_MCS14+
        T3.PDSCH_TRANS_USING_MCS15+
        T3.PDSCH_TRANS_USING_MCS16+
        T3.PDSCH_TRANS_USING_MCS17+
        T3.PDSCH_TRANS_USING_MCS18+
        T3.PDSCH_TRANS_USING_MCS19+
        T3.PDSCH_TRANS_USING_MCS20+
        T3.PDSCH_TRANS_USING_MCS21+
        T3.PDSCH_TRANS_USING_MCS22+
        T3.PDSCH_TRANS_USING_MCS23+
        T3.PDSCH_TRANS_USING_MCS24+
        T3.PDSCH_TRANS_USING_MCS25+
        T3.PDSCH_TRANS_USING_MCS26+
        T3.PDSCH_TRANS_USING_MCS27+
        T3.PDSCH_TRANS_USING_MCS28+
        T3.PDSCH_TRANS_USING_MCS29+
        T3.PDSCH_TRANS_USING_MCS30+
        T3.PDSCH_TRANS_USING_MCS31
      )                                         ,0 )  AS BLER_PDSCH_DEN,
      NVL(SUM(T2.SIGN_CONN_ESTAB_COMP)                 ,0 )  AS  RRC_CONN_STP_SUCCESS_NUM,
      NVL(SUM(
        T2.SIGN_CONN_ESTAB_ATT_MO_S+
        T2.SIGN_CONN_ESTAB_ATT_MT+
        T2.SIGN_CONN_ESTAB_ATT_MO_D+
        T2.SIGN_CONN_ESTAB_ATT_OTHERS+
        T2.SIGN_CONN_ESTAB_ATT_EMG
      )                                       ,0 )  AS RRC_CONN_STP_SUCCESS_DEN,

       NVL(SUM(
        T1.EPC_EPS_BEARER_REL_REQ_NORM+
        T1.EPC_EPS_BEARER_REL_REQ_DETACH+
        T1.EPC_EPS_BEARER_REL_REQ_RNL+
        T1.EPC_EPS_BEARER_REL_REQ_OTH +
        T1.ENB_EPSBEAR_REL_REQ_RNL_REDIR+
        T1.ENB_EPS_BEARER_REL_REQ_NORM +
        T1.ENB_EPS_BEARER_REL_REQ_RNL +
        T1.ENB_EPS_BEARER_REL_REQ_TNL +
        T1.ENB_EPS_BEARER_REL_REQ_OTH+
        T1.PRE_EMPT_GBR_BEARER +
        T1.PRE_EMPT_NON_GBR_BEARER)                     ,0) AS RAB_DROP_ATTEMPTS,


      NVL(SUM(T1.EPS_BEARER_SETUP_COMPLETIONS)             ,0 )  AS  RAB_STP_SUCCESS_NUM,
      NVL(SUM(T1.EPS_BEARER_SETUP_ATTEMPTS)               ,0 )  AS RAB_STP_SUCCESS_DEN,

      NVL(SUM(
        T1.EPS_BEARER_STP_COM_INI_QCI1+
        T1.EPS_BEARER_STP_COM_INI_QCI_2+
        T1.EPS_BEARER_STP_COM_INI_QCI_3+
        T1.EPS_BEARER_STP_COM_INI_QCI_4+
        T1.EPS_BEAR_STP_COM_INI_NON_GBR
      )                                                 ,0) AS RAB_SETUP_SUCCESS_NUM,
      NVL(SUM(
        T1.EPS_BEARER_STP_ATT_INI_QCI_1+
        T1.EPS_BEARER_STP_ATT_INI_QCI_2+
        T1.EPS_BEARER_STP_ATT_INI_QCI_3+
        T1.EPS_BEARER_STP_ATT_INI_QCI_4+
        T1.EPS_BEAR_STP_ATT_INI_NON_GBR
      )                                                 ,0) AS RAB_SETUP_SUCCESS_DEN,

      NVL(SUM(
        T2.SIGN_CONN_ESTAB_ATT_MO_S+
        T2.SIGN_CONN_ESTAB_ATT_MT+
        T2.SIGN_CONN_ESTAB_ATT_MO_D+
        T2.SIGN_CONN_ESTAB_ATT_OTHERS+
        T2.SIGN_CONN_ESTAB_ATT_EMG
      )                                                ,0)  AS RRC_CONN_STP_ATTEMPTS,

      NVL(SUM(T1.EPS_BEARER_SETUP_ATTEMPTS)               ,0) AS EPS_BEARER_SETUP_ATTEMPTS,


      NVL(SUM(
        T1.EPC_EPS_BEARER_REL_REQ_RNL+
        T1.EPC_EPS_BEARER_REL_REQ_OTH +
        T1.ENB_EPS_BEARER_REL_REQ_RNL+
        T1.ENB_EPS_BEARER_REL_REQ_TNL+
        T1.ENB_EPS_BEARER_REL_REQ_OTH
      )                                                   ,0) AS RAB_DROP_USR_NUM,
      NVL(SUM(
        T1.EPC_EPS_BEARER_REL_REQ_NORM+
        T1.EPC_EPS_BEARER_REL_REQ_DETACH+
        T1.EPC_EPS_BEARER_REL_REQ_RNL+
        T1.EPC_EPS_BEARER_REL_REQ_OTH +
        T1.ENB_EPSBEAR_REL_REQ_RNL_REDIR+
        T1.ENB_EPS_BEARER_REL_REQ_NORM +
        T1.ENB_EPS_BEARER_REL_REQ_RNL+
        T1.ENB_EPS_BEARER_REL_REQ_TNL+
        T1.ENB_EPS_BEARER_REL_REQ_OTH
      )                                                    ,0) As RAB_DROP_USR_DEN,

      NVL(SUM(
        T1.EPC_EPS_BEARER_REL_REQ_NORM+
        T1.EPC_EPS_BEARER_REL_REQ_DETACH+
        T1.ENB_EPSBEAR_REL_REQ_RNL_REDIR+
        T1.ENB_EPS_BEARER_REL_REQ_NORM +
        T1.PRE_EMPT_GBR_BEARER +
        T1.PRE_EMPT_NON_GBR_BEARER
      )                                           ,0) AS RAB_NORMAL_RELEASE_NUM ,
      NVL(SUM(
        T1.EPC_EPS_BEARER_REL_REQ_NORM+
        T1.EPC_EPS_BEARER_REL_REQ_DETACH+
        T1.EPC_EPS_BEARER_REL_REQ_RNL+
        T1.EPC_EPS_BEARER_REL_REQ_OTH +
        T1.ENB_EPSBEAR_REL_REQ_RNL_REDIR+
        T1.ENB_EPS_BEARER_REL_REQ_NORM +
        T1.ENB_EPS_BEARER_REL_REQ_RNL +
        T1.ENB_EPS_BEARER_REL_REQ_TNL +
        T1.ENB_EPS_BEARER_REL_REQ_OTH+
        T1.PRE_EMPT_GBR_BEARER +
        T1.PRE_EMPT_NON_GBR_BEARER
      )                                           ,0) AS RAB_NORMAL_RELEASE_DEN ,




      NVL(SUM(T1.EPC_EPS_BEARER_REL_REQ_RNL)         ,0) AS EPC_EPS_BEARER_REL_REQ_RNL ,
      NVL(SUM(T1.EPC_EPS_BEARER_REL_REQ_OTH)         ,0) AS EPC_EPS_BEARER_REL_REQ_OTH ,

      NVL(ROUND(AVG(T3.CELL_LOAD_ACT_UE_AVG),2)         ,0) AS AVG_ACTIVE_USER_CELL,

      NVL(MAX(T3.CELL_LOAD_ACT_UE_AVG)                  ,0) AS MAX_AVG_ACTIVE_USER_CELL,

      NVL(ROUND(DECODE(AVG(T3.DENOM_RRC_CONN_UE),0,0,
          SUM(T3.SUM_RRC_CONN_UE)
          /AVG(T3.DENOM_RRC_CONN_UE)),2)                ,0) AS RRC_CONNECTED_UES

      FROM NOKLTE_PS_LCELLT_MNC1_RAW T4
      LEFT OUTER JOIN NOKLTE_PS_LUEST_MNC1_RAW T2
      ON T4.MRBTS_ID = T2.MRBTS_ID
      AND T4.LNBTS_ID = T2.LNBTS_ID
      AND T4.LNCEL_ID = T2.LNCEL_ID
      AND T4.PERIOD_START_TIME = T2.PERIOD_START_TIME
      LEFT OUTER JOIN NOKLTE_PS_LCELLD_MNC1_RAW T3
      ON T4.MRBTS_ID = T3.MRBTS_ID
      AND T4.LNBTS_ID = T3.LNBTS_ID
      AND T4.LNCEL_ID = T3.LNCEL_ID
      AND T4.PERIOD_START_TIME = T3.PERIOD_START_TIME
      LEFT OUTER JOIN NOKLTE_PS_LEPSB_MNC1_RAW T1
      ON T4.MRBTS_ID = T1.MRBTS_ID
      AND T4.LNBTS_ID = T1.LNBTS_ID
      AND T4.LNCEL_ID = T1.LNCEL_ID
      AND T4.PERIOD_START_TIME = T1.PERIOD_START_TIME
      LEFT OUTER JOIN LTE_NSN_SERVICE_LCEL_HOUR T5
      ON T4.MRBTS_ID = T5.MRBTS_ID
      AND T4.LNBTS_ID = T5.LNBTS_ID
      AND T4.LNCEL_ID = T5.LNCEL_ID
      AND TRUNC(T4.PERIOD_START_TIME, 'HH24') = T5.FECHA

      WHERE T4.PERIOD_START_TIME BETWEEN TO_DATE(FECHA_DESDE, 'DD.MM.YYYY HH24')
                               AND TO_DATE(FECHA_HASTA, 'DD.MM.YYYY HH24')
      --TRUNC(SYSDATE, 'HH24') - 5/24
      --                           AND TRUNC(SYSDATE, 'HH24') - 1 + (86399 / 86400)
      AND T5.LNCEL_ID IS NULL
      AND T5.FECHA IS NULL

      GROUP BY TRUNC(T4.PERIOD_START_TIME, 'HH24'), T4.MRBTS_ID, T4.LNBTS_ID, T4.LNCEL_ID;


 BEGIN
  OPEN CUR (P_FECHA_DESDE, P_FECHA_HASTA);
  LOOP

  FETCH CUR BULK COLLECT INTO T_ARRAY_COL LIMIT LIMIT_IN;
    BEGIN
      FORALL I IN 1 .. T_ARRAY_COL.COUNT SAVE EXCEPTIONS
        INSERT INTO LTE_NSN_SERVICE_LCEL_HOUR VALUES T_ARRAY_COL (I);
    EXCEPTION
      WHEN DML_ERRORS THEN
        -- CAPTURE EXCEPTIONS TO PERFORM OPERATIONS DML
             L_ERRORS := SQL%BULK_EXCEPTIONS.COUNT;
                FOR I IN 1 .. L_ERRORS
                LOOP
                    L_ERRNO := SQL%BULK_EXCEPTIONS(I).ERROR_CODE;
                    L_MSG   := SQLERRM(-L_ERRNO);
                    L_IDX   := SQL%BULK_EXCEPTIONS(I).ERROR_INDEX;
                    /*
                    INSERT INTO ERROR_LOG(ID, IMPORT_DATE, SOURCE, TARGET, LNBTS_ID, LNCEL_ID, PERIOD_START_TIME,
                     MCC_ID, MNC_ID, ERROR_NRO, ERROR_MESG)
                    VALUES
                    (SEQ_ERROR_LOG.NEXTVAL,SYSDATE,P_SOURCE1_TABLE,P_TARGET_TABLE,T_ARRAY_COL(L_IDX).LNBTS_ID,
                     T_ARRAY_COL(L_IDX).LNCEL_ID,T_ARRAY_COL(L_IDX).PERIOD_START_TIME,T_ARRAY_COL(L_IDX).MCC_ID,
                     T_ARRAY_COL(L_IDX).MNC_ID, L_ERRNO,L_MSG );
          */
      END LOOP;
    -- END --
    END;
    EXIT WHEN CUR%NOTFOUND;
  END LOOP;
  COMMIT;
  CLOSE CUR;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
