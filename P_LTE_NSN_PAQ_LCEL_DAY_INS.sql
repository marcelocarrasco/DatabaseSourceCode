--------------------------------------------------------
--  DDL for Procedure P_LTE_NSN_PAQ_LCEL_DAY_INS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "HARRIAGUE"."P_LTE_NSN_PAQ_LCEL_DAY_INS" (P_FECHA_DESDE IN CHAR, P_FECHA_HASTA IN CHAR)
IS
-- Autor: Paula Fernandez. Fecha: 08.09.2015.
TYPE CUR_TYP IS REF CURSOR;
CUR CUR_TYP;

DML_ERRORS EXCEPTION;
PRAGMA EXCEPTION_INIT(DML_ERRORS, -24381);
    -- LOG --
L_ERRORS NUMBER;
L_ERRNO    NUMBER;
L_MSG    VARCHAR2(4000);
L_IDX    NUMBER;
  -- END LOG --

LIMIT_IN PLS_INTEGER := 100;

TYPE T_ARRAY_TAB IS TABLE OF LTE_NSN_PAQ_LCEL_DAY%ROWTYPE;
T_ARRAY_COL T_ARRAY_TAB;

 BEGIN
  OPEN CUR FOR

        SELECT
           TRUNC( T1.FECHA, 'DD')                      AS   FECHA,
           T1.MRBTS_ID                                 AS   MRBTS_ID,
           T1.LNBTS_ID                                 AS   LNBTS_ID,
           T1.LNCEL_ID                                 AS   LNCEL_ID,
           NVL(SUM(T1.RSSI_PUSCH_UL_NUM),0 )           AS   RSSI_PUSCH_UL_NUM,
           NVL(SUM(T1.RSSI_PUSCH_UL_DEN),0 )           AS   RSSI_PUSCH_UL_DEN,
           NVL(SUM(T1.RSSI_PUCCH_UL_NUM),0 )           AS   RSSI_PUCCH_UL_NUM,
           NVL(SUM(T1.RSSI_PUCCH_UL_DEN),0 )           AS   RSSI_PUCCH_UL_DEN,
           NVL(SUM(T1.SINR_PUSCH_UL_NUM),0 )           AS   SINR_PUSCH_UL_NUM,
           NVL(SUM(T1.SINR_PUSCH_UL_DEN),0 )           AS   SINR_PUSCH_UL_DEN,
           NVL(SUM(T1.SINR_PUCCH_UL_NUM),0 )           AS   SINR_PUCCH_UL_NUM,
           NVL(SUM(T1.SINR_PUCCH_UL_DEN),0 )           AS   SINR_PUCCH_UL_DEN,
           NVL(SUM(T1.CQI_NUM)          ,0 )           AS   CQI_NUM,
           NVL(SUM(T1.CQI_DEN)          ,0 )           AS   CQI_DEN

    FROM LTE_NSN_PAQ_LCEL_HOUR T1
        LEFT OUTER JOIN LTE_NSN_PAQ_LCEL_DAY T2
        ON T1.MRBTS_ID = T2.MRBTS_ID
        AND T1.LNBTS_ID = T2.LNBTS_ID
        AND T1.LNCEL_ID = T2.LNCEL_ID
        AND TRUNC( T1.FECHA, 'DD') = T2.FECHA

    WHERE  TO_DATE(TO_CHAR( TRUNC(T1.FECHA, 'DD') , 'DD.MM.YYYY'), 'DD.MM.YYYY HH24')   BETWEEN TO_DATE(P_FECHA_DESDE, 'DD.MM.YYYY HH24')   AND TO_DATE(P_FECHA_HASTA, 'DD.MM.YYYY HH24')
      AND T2.LNCEL_ID IS NULL
      AND T2.FECHA IS NULL

      GROUP BY TRUNC( T1.FECHA, 'DD') , T1.MRBTS_ID, T1.LNBTS_ID, T1.LNCEL_ID;
  LOOP
    FETCH CUR BULK COLLECT INTO T_ARRAY_COL LIMIT LIMIT_IN;
    BEGIN
      FORALL I IN 1 .. T_ARRAY_COL.COUNT SAVE EXCEPTIONS
        INSERT INTO LTE_NSN_PAQ_LCEL_DAY VALUES T_ARRAY_COL (I);
    EXCEPTION
      WHEN DML_ERRORS THEN
        -- CAPTURE EXCEPTIONS TO PERFORM OPERATIONS DML
             L_ERRORS := SQL%BULK_EXCEPTIONS.COUNT;
                FOR I IN 1 .. L_ERRORS
                LOOP
                    L_ERRNO := SQL%BULK_EXCEPTIONS(I).ERROR_CODE;
                    L_MSG   := SQLERRM(-L_ERRNO);
                    L_IDX   := SQL%BULK_EXCEPTIONS(I).ERROR_INDEX;
                    /*
                    INSERT INTO ERROR_LOG(ID, IMPORT_DATE, SOURCE, TARGET, LNBTS_ID, LNCEL_ID, PERIOD_START_TIME,
                     MCC_ID, MNC_ID, ERROR_NRO, ERROR_MESG)
                    VALUES
                    (SEQ_ERROR_LOG.NEXTVAL,SYSDATE,P_SOURCE1_TABLE,P_TARGET_TABLE,T_ARRAY_COL(L_IDX).LNBTS_ID,
                     T_ARRAY_COL(L_IDX).LNCEL_ID,T_ARRAY_COL(L_IDX).PERIOD_START_TIME,T_ARRAY_COL(L_IDX).MCC_ID,
                     T_ARRAY_COL(L_IDX).MNC_ID, L_ERRNO,L_MSG );
          */
                END LOOP;
    -- END --
    END;
    EXIT WHEN CUR%NOTFOUND;
  END LOOP;
  COMMIT;
  CLOSE CUR;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

/
